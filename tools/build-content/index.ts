#!/usr/bin/env ts-node
import * as ejs from 'ejs';
import * as fs from 'fs-extra';
import * as DATA from './prepare-data';
import * as path from 'path';
import { getAllFilesInTree } from './helpers';

const TEMPLATES_PATH = path.resolve(__dirname, '../../content/templates');
const OUTPUT_PATH = path.resolve(__dirname, '../../');

const templates = getAllFilesInTree(TEMPLATES_PATH)
  .map(file => path.relative(TEMPLATES_PATH, file))
  .filter(file => file.endsWith('.ejs'));
templates.forEach(async template => {
  console.log(`Building ${template}`);
  const templatePath = path.resolve(TEMPLATES_PATH, template);
  const outputPath = path.resolve(OUTPUT_PATH, template.replace(/\.ejs$/, ''));
  const output: string = await ejs.renderFile(templatePath, {
    ...DATA,
    DONT_EDIT_WARNING: `! DO NOT EDIT THIS FILE. IT IS AUTOGENERATED.\nTo edit this file, make an edit to its template in \`${path
      .relative(path.dirname(outputPath), templatePath)
      .replace(/\\/g, '/')}\`.`
  });
  fs.ensureDirSync(path.dirname(outputPath));
  fs.writeFileSync(outputPath, output);
});
